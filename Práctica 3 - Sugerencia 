import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Estudiante {
    private String nombre;
    private int edad;

    public Estudiante(String nombre, int edad) {
        this.nombre = nombre;
        this.edad = edad;
    }

    public String getNombre() {
        return nombre;
    }

    public int getEdad() {
        return edad;
    }

    @Override
    public String toString() {
        return "Estudiante: " + nombre + " | Edad: " + edad;
    }
}

public class Main {
    public static void main(String[] args) {
        ArrayList<Estudiante> listaEstudiantes = new ArrayList<>(); // Lista de estudiantes
        Map<String, ArrayList<Integer>> calificaciones = new HashMap<>(); // Mapa de calificaciones
        Scanner sc = new Scanner(System.in);
        int opcion;

        do {
            System.out.println("\n=== MEN√ö DE OPCIONES ===");
            System.out.println("1. A√±adir estudiante");
            System.out.println("2. Eliminar estudiante");
            System.out.println("3. Obtener estudiante (por √≠ndice)");
            System.out.println("4. Localizar estudiante (por nombre)");
            System.out.println("5. Mostrar todos los estudiantes");
            System.out.println("6. A√±adir calificaci√≥n a un estudiante");
            System.out.println("7. Mostrar calificaciones de un estudiante");
            System.out.println("8. Salir");
            System.out.print("Elige una opci√≥n: ");
            opcion = sc.nextInt();
            sc.nextLine(); // limpiar buffer

            switch (opcion) {
                case 1 -> {
                    System.out.print("Nombre del estudiante: ");
                    String nombre = sc.nextLine();
                    System.out.print("Edad del estudiante: ");
                    int edad = sc.nextInt();
                    listaEstudiantes.add(new Estudiante(nombre, edad));
                    calificaciones.put(nombre, new ArrayList<>()); // inicializa su lista de calificaciones
                    System.out.println("‚úÖ Estudiante a√±adido.");
                }

                case 2 -> {
                    System.out.print("Nombre del estudiante a eliminar: ");
                    String nombre = sc.nextLine();
                    boolean eliminado = false;
                    for (int i = 0; i < listaEstudiantes.size(); i++) {
                        if (listaEstudiantes.get(i).getNombre().equalsIgnoreCase(nombre)) {
                            listaEstudiantes.remove(i);
                            calificaciones.remove(nombre); // tambi√©n se eliminan sus calificaciones
                            eliminado = true;
                            System.out.println("üóëÔ∏è Estudiante eliminado.");
                            break;
                        }
                    }
                    if (!eliminado) {
                        System.out.println("‚ö†Ô∏è Estudiante no encontrado.");
                    }
                }

                case 3 -> {
                    System.out.print("Ingresa el √≠ndice: ");
                    int index = sc.nextInt();
                    if (index >= 0 && index < listaEstudiantes.size()) {
                        System.out.println("üìå " + listaEstudiantes.get(index));
                    } else {
                        System.out.println("‚ö†Ô∏è √çndice inv√°lido.");
                    }
                }

                case 4 -> {
                    System.out.print("Nombre a buscar: ");
                    String nombre = sc.nextLine();
                    boolean encontrado = false;
                    for (Estudiante e : listaEstudiantes) {
                        if (e.getNombre().equalsIgnoreCase(nombre)) {
                            System.out.println("üîç Encontrado: " + e);
                            encontrado = true;
                            break;
                        }
                    }
                    if (!encontrado) {
                        System.out.println("‚ö†Ô∏è Estudiante no encontrado.");
                    }
                }

                case 5 -> {
                    System.out.println("\nüìö Lista de estudiantes:");
                    if (listaEstudiantes.isEmpty()) {
                        System.out.println("‚ö†Ô∏è No hay estudiantes en la lista.");
                    } else {
                        for (Estudiante e : listaEstudiantes) {
                            System.out.println(e);
                        }
                    }
                }

                case 6 -> {
                    System.out.print("Nombre del estudiante: ");
                    String nombre = sc.nextLine();
                    if (calificaciones.containsKey(nombre)) {
                        System.out.print("Nueva calificaci√≥n: ");
                        int nota = sc.nextInt();
                        calificaciones.get(nombre).add(nota);
                        System.out.println("‚úÖ Calificaci√≥n a√±adida.");
                    } else {
                        System.out.println("‚ö†Ô∏è Estudiante no encontrado.");
                    }
                }

                case 7 -> {
                    System.out.print("Nombre del estudiante: ");
                    String nombre = sc.nextLine();
                    if (calificaciones.containsKey(nombre)) {
                        ArrayList<Integer> notas = calificaciones.get(nombre);
                        if (notas.isEmpty()) {
                            System.out.println("üìå " + nombre + " a√∫n no tiene calificaciones.");
                        } else {
                            System.out.println("üìå Calificaciones de " + nombre + ": " + notas);
                        }
                    } else {
                        System.out.println("‚ö†Ô∏è Estudiante no encontrado.");
                    }
                }

                case 8 -> System.out.println("üëã Saliendo del programa...");

                default -> System.out.println("‚ùå Opci√≥n no v√°lida.");
            }

        } while (opcion != 8);

        sc.close();
    }
}