import java.util.Scanner;

public class MenuOperadores {
    
    // Función para imprimir decimal y binario 
    // La usamos en case 10 para que sea visible el procedimiento
    public static void mostrarResultado(String operacion, int valor) {
    System.out.println(operacion + ": " + valor + " (binario " + Integer.toBinaryString(valor) + ")");
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int opcion;
        
        do {
            System.out.println("\n--- MENÚ DE OPERADORES ---");
            System.out.println("1.- Operadores aritméticos");
            System.out.println("2.- Operadores de asignación");
            System.out.println("3.- Operadores unarios");
            System.out.println("4.- Operador instanceof");
            System.out.println("5.- Operador condicional (ternario)");
            System.out.println("6.- Operadores incrementales");
            System.out.println("7.- Operadores relacionales");
            System.out.println("8.- Operadores lógicos");
            System.out.println("9.- Operadores de concatenación de cadenas");
            System.out.println("10.- Operadores a nivel de bits");
            System.out.println("11.- Salir");
            System.out.print("\nElige una opción: ");
            opcion = sc.nextInt();
            
            switch (opcion) {
                case 1: // Aritméticos
                    System.out.println("\n"); 
                    
                    // Pedir valores de a y b
                    int a, b;
                    System.out.print("Dame un valor para a: ");
                    a = sc.nextInt();
                    System.out.print("Dame un valor para b: ");
                    b = sc.nextInt();
                    
                    // Realizar operaciones
                    System.out.println("Suma: " + a + " + " + b + " = " + (a + b));
                    System.out.println("Resta: " + a + " - " + b + " = "  + (a - b));
                    System.out.println("Multiplicación: " + a + " * " + b + " = "  + (a * b));
                    System.out.println("División: " + a + " / " + b + " = "  + (a / b));
                    System.out.println("Módulo: " + a + " % " + b + " = "  + (a % b));
                    
                    System.out.println("\n");
                    break;
                    
                case 2: // Asignación
                    System.out.println("\n");
                    
                    // Pedir un valor inicial
                    int x;
                    System.out.print("Dame un valor inicial: ");
                    x = sc.nextInt();
                    
                    // Hacer las operaciones
                    // Se hacen de forma continua (al resultado le aplicamos la nueva operación)
                    System.out.println("x es igual a: " + x);
                    x += 3;
                    System.out.println(" x += 3 -> " + x);
                    System.out.println("\nx ahora es igual a " + x);
                    x -= 2;
                    System.out.println(" x -= 2 -> " + x);
                    System.out.println("\nx ahora es igual a " + x);
                    x *= 4;
                    System.out.println(" x *= 4 -> " + x);
                    System.out.println("\nx ahora es igual a " + x);
                    x /= 3;
                    System.out.println(" x /= 3 -> " + x);
                    System.out.println("\nx ahora es igual a " + x);
                    x %= 5;
                    System.out.println(" x %= 5 -> " + x);
                    System.out.println("\nEl valor final de x es " + x);
                    
                    System.out.println("\n");
                    break;
                    
                case 3: // Unarios
                    System.out.println("\n");
                    
                    int c;
                    System.out.print("Dame un número: ");
                    c = sc.nextInt();
                    System.out.println("Unario positivo: " + (+c));
                    System.out.println("Unario negativo: " + (-c));
                    
                    System.out.println("\n");
                    break;
                    
                case 4: // Instanceof
                    System.out.println("\n");
                    
                    // Creamos un objeto de ejemplo
                    String texto = "Hola profe :)";
                    
                    // Veriericamos si un objeto pertenece a una clase
                    System.out.println("¿El objeto 'texto' es una instancia de String? " + (texto instanceof String));
                    System.out.println("¿El objeto 'texto' es una instancia de Object? " + (texto instanceof Object));
                    
                    System.out.println("\n");
                    break;
                    
                case 5: // Condicional ternario
                    System.out.println("\n");
                    
                    // Pedir un número
                    int n;
                    System.out.print("Dame un número: ");
                    n = sc.nextInt();
                    
                    // Usamos el operador ternario
                    String resultado = (n % 2 == 0) ? "PAR" : "IMPAR";
                    
                    System.out.println("Evaluamos si el número es par o impar:");
                    System.out.println("Resultado: " + resultado);
                    
                    System.out.println("\n");
                    break;
                    
                case 6: // Incrementales
                    System.out.println("\n");
                    
                    // Pedir un valor inicial
                    int num;
                    System.out.print("Dame un valor inicial: ");
                    num = sc.nextInt();
                    
                    // Hacer las operaciones
                    // Se hacen de forma continua (al resultado le aplicamos la nueva operación)
                    System.out.println("num es igual a: " + num);
                    num++;
                    System.out.println(" num++ = " + num);
                    System.out.println("\nnum ahora es igual a " + num);
                    num--;
                    System.out.println(" num-- = " + num);
                    System.out.println("\nEl valor final de num es " + num);
                    
                    System.out.println("\n");
                    break;
                    
                case 7: // Relacionales
                    System.out.println("\n");
                    
                    // Pedimos valores
                    int num1, num2;
                    System.out.println("Ingrese el primer número:");
                    num1 = sc.nextInt();
                    System.out.println("Ingrese el segundo número:");
                    num2 = sc.nextInt();
                    
                    // Hacemos las relaciones
                    System.out.println("\nLa relacion entre los números es: ");
                    System.out.println(num1 + " > " + num2 + " : " + (num1 > num2));
                    System.out.println(num1 + " >= " + num2 + " : " + (num1 >= num2));
                    System.out.println(num1 + " < " + num2 + " : " + (num1 < num2));
                    System.out.println(num1 + " <= " + num2 + " : " + (num1 <= num2));
                    System.out.println(num1 + " == " + num2 + " : " + (num1 == num2));
                    System.out.println(num1 + " != " + num2 + " : " + (num1 != num2));
                    
                    System.out.println("\n");
                    break;
                    
                case 8: // Lógicos
                    System.out.println("\n");
                    
                    // Usamos los peradores
                    boolean bool1 = true, bool2 = false;
                    System.out.println("El valor booleano 1 es: " + bool1 + " y el valor booleano 2 es: " + bool2);
                    System.out.println(bool1 + " && " + bool2 + " : " + (bool1 && bool2));
                    System.out.println(bool1 + " || " + bool2 + " : " + (bool1 || bool2));
                    System.out.println(bool1 + " && " + bool2 + " : " + (bool1 && bool2));
                    System.out.println("!" + bool1 + " : " + (!bool1));
                    System.out.println(bool1 + " & " + bool2 + " : " + (bool1 & bool2));
                    System.out.println(bool1 + " | " + bool2 + " : " + (bool1 | bool2));
                    
                    System.out.println("\n");
                    break;
                    
                case 9: // Concatenación
                    //Se agrega porque cuando pones sc.nextline se salta el sujeto
                    sc.nextLine(); 
                    
                    // Pedimos los datos de la oración
                    System.out.println("\n");
                    System.out.println ("Haremos una oración con la estructura: Sujeto, verbo, predicado"); 
                    System.out.println ("\nEscriba el sujeto de la oracion:"); 
                    String sujeto= sc.nextLine();
                    System.out.println ("\nIngrese el verbo:"); 
                    String verbo= sc.nextLine();
                    System.out.println("\nIngrese el predicado");
                    String predicado= sc.nextLine(); 
                    System.out.println(" \nLa oracion es: " + sujeto + " " + verbo + " " + predicado);
                    
                    System.out.println("\n");
                    break;
                    
                case 10: // A nivel de bits
                    int valor1 = 11;   // binario 1011
                    int valor2 = 8;    // binario 1000
                    System.out.println("Valores iniciales:");
                    mostrarResultado("valor 1: ", valor1);
                    mostrarResultado("valor 2: ", valor2);
                    
                    // Hace las operaciones
                    // Operadores
                    System.out.println("\n--- Operadores lógicos ---");
                    
                    System.out.println("\nAND: pone 1 si ambos bits son 1");
                    mostrarResultado("AND (&)", (valor1 & valor2));
                    
                    System.out.println("\nOR: pone 1 si al menos un bit es 1");
                    mostrarResultado("OR (|)", (valor1 | valor2));
                    
                    System.out.println("\nXOR: 1 si los bits son diferentes");
                    mostrarResultado("XOR (^)", (valor1 ^ valor2));
                    
                    System.out.println("\nNOT: invierte todos los bits");
                    mostrarResultado("NOT (~)", (~valor1));
                    
                    // Desplazamientos
                    System.out.println("\n--- Desplazamientos ---");
                    
                    System.out.println("\nDesplaza a la izquierda");
                    mostrarResultado("<< 1", (valor1 << 1));
                    
                    System.out.println("\nDesplaza a la derecha");
                    mostrarResultado(">> 1", (valor1 >> 1));
                    
                    System.out.println("\nDesplaza a la derecha llenando con ceros");
                    mostrarResultado(">>> 1", (valor1 >>> 1));
                    
                    // Asignaciones
                    System.out.println("\n--- Asignaciones (operadores combinados) ---");
                    
                    valor1 &= valor2;
                    System.out.println("\nEquivale a: guardar en valor1 el resultado de hacer AND con valor2");
                    mostrarResultado("valor1 &= valor2", valor1);
                    
                    valor1 |= 8;
                    System.out.println("\nEquivale a: guardar en valor1 el resultado de hacer OR con 8");
                    mostrarResultado("valor1 |= 8", valor1);
                    
                    valor1 ^= 4;
                    System.out.println("\nEquivale a: guardar en valor1 el resultado de hacer XOR con 4");
                    mostrarResultado("valor1 ^= 4", valor1);
                    
                    valor1 <<= 1;
                    System.out.println("\nEquivale a: mover los bits de valor1 una posición a la izquierda");
                    mostrarResultado("valor1 <<= 1", valor1);
                    
                    valor1 >>= 1;
                    System.out.println("\nEquivale a: mover los bits de valor1 una posición a la derecha (con signo)");
                    mostrarResultado("valor1 >>= 1", valor1);
                    
                    valor1 >>>= 1;
                    System.out.println("\nEquivale a: mover los bits de valor1 una posición a la derecha (llenando con ceros)");
                    mostrarResultado("valor1 >>>= 1", valor1);
                    break;
                    
                case 11: // Salir
                    System.out.println("\n");
                    System.out.println("Hasta luego :)");
                    System.out.println("\n");
                    continue;
                    
                default: // Otra opción
                    System.out.println("\n");
                    System.out.println("Su seleccion no es correcta :(");
                    System.out.println("\n");
                    continue;
            }
        } while (opcion != 11);
        
        sc.close();
    }
}
