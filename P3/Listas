import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Clase Libro (objeto que se guardar√° en la lista)
class Libro {
    private String titulo;
    private String autor;
    private int anio;

    public Libro(String titulo, String autor, int anio) {
        this.titulo = titulo;
        this.autor = autor;
        this.anio = anio;
    }

    public String getTitulo() {
        return titulo;
    }

    @Override
    public String toString() {
        return "T√≠tulo: " + titulo + " | Autor: " + autor + " | A√±o: " + anio;
    }
}

// Clase principal (gestor de la biblioteca)
public class GestorBiblioteca {
    private List<Libro> catalogo = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public void iniciar() {
        int opcion;
        do {
            System.out.println("\n--- GESTOR DE BIBLIOTECA ---");
            System.out.println("1. A√±adir libro");
            System.out.println("2. Eliminar libro");
            System.out.println("3. Buscar libro por t√≠tulo");
            System.out.println("4. Mostrar cat√°logo");
            System.out.println("5. Salir");
            System.out.print("Elige una opci√≥n: ");
            opcion = scanner.nextInt();
            scanner.nextLine(); // limpiar buffer

            switch (opcion) {
                case 1 -> anadirLibro();
                case 2 -> eliminarLibro();
                case 3 -> buscarLibro();
                case 4 -> mostrarCatalogo();
                case 5 -> System.out.println("Saliendo del programa...");
                default -> System.out.println("Opci√≥n no v√°lida, intenta otra vez.");
            }
        } while (opcion != 5);
    }

    // M√©todo para a√±adir un libro
    private void anadirLibro() {
        System.out.print("T√≠tulo: ");
        String titulo = scanner.nextLine();
        System.out.print("Autor: ");
        String autor = scanner.nextLine();
        System.out.print("A√±o de publicaci√≥n: ");
        int anio = scanner.nextInt();
        scanner.nextLine(); // limpiar buffer

        catalogo.add(new Libro(titulo, autor, anio));
        System.out.println("‚úÖ Libro a√±adido al cat√°logo.");
    }

    // M√©todo para eliminar un libro por t√≠tulo
    private void eliminarLibro() {
        System.out.print("Introduce el t√≠tulo del libro a eliminar: ");
        String titulo = scanner.nextLine();

        boolean eliminado = catalogo.removeIf(libro -> libro.getTitulo().equalsIgnoreCase(titulo));

        if (eliminado) {
            System.out.println("‚úÖ Libro eliminado.");
        } else {
            System.out.println("‚ö†Ô∏è No se encontr√≥ el libro en el cat√°logo.");
        }
    }

    // M√©todo para buscar un libro por t√≠tulo
    private void buscarLibro() {
        System.out.print("Introduce el t√≠tulo a buscar: ");
        String titulo = scanner.nextLine();

        boolean encontrado = false;
        for (Libro libro : catalogo) {
            if (libro.getTitulo().equalsIgnoreCase(titulo)) {
                System.out.println("üìñ " + libro);
                encontrado = true;
            }
        }

        if (!encontrado) {
            System.out.println("‚ö†Ô∏è No se encontr√≥ el libro.");
        }
    }

    // Mostrar todos los libros
    private void mostrarCatalogo() {
        if (catalogo.isEmpty()) {
            System.out.println("El cat√°logo est√° vac√≠o.");
        } else {
            System.out.println("\n--- CAT√ÅLOGO DE LIBROS ---");
            for (Libro libro : catalogo) {
                System.out.println(libro);
            }
        }
    }

    // M√©todo main
    public static void main(String[] args) {
        GestorBiblioteca gestor = new GestorBiblioteca();
        gestor.iniciar();
    }
}

